import tensorflow as tf
# placeholder 是 Tensorflow 中的占位符，暂时储存变量.
# Tensorflow 如果想要从外部传入data, 那就需要用到 tf.placeholder(),
# 然后以这种形式传输数据 sess.run(***, feed_dict={input: **}).
# 你想用placeholder,意味着你用sess.run运行结果的时候，
# 再给它输入的一个值。你用了placeholder,就和feed_dict是绑定的
x1 = tf.placeholder(dtype=tf.float32, shape=None)
y1 = tf.placeholder(dtype=tf.float32, shape=None)
z1 = x1 + y1

x2 = tf.placeholder(dtype=tf.float32, shape=[2, 1])
y2 = tf.placeholder(dtype=tf.float32, shape=[1, 2])
z2 = tf.matmul(x2, y2)

with tf.Session() as sess:
    # when only one operation to run
    z1_value = sess.run(z1, feed_dict={x1: 1, y1: 2}) # x1=1, y1=2

    # when run multiple operations
    z1_value, z2_value = sess.run(
        [z1, z2],       # run them together
        feed_dict={
            x1: 1, y1: 2,
            x2: [[2], [2]], y2: [[3, 3]]
        })
    print(z1_value)
    print(z2_value)

"""""
from __future__ import print_function
import tensorflow as tf

#一开始先hold住类似于变量的东西，但是到之后session.run的时候，
#它其实是要让你从外界传入进来把placeholder填进去，比如说每次都是从外界
#传入一个值，每一次都是想用不同的值来代替它，
# 在 Tensorflow 中需要定义 placeholder 的 type ，一般为 float32 形式
input1 = tf.placeholder(tf.float32)  # 需要给定type是什么样子的，大部分只能处理float32
input2 = tf.placeholder(tf.float32) # 若你想给定它一个结构，只是一个两行两列的
                                #input2 = tf.placeholder(tf.float32，[2,2])
output = tf.multiply(input1, input2)
# mul = multiply 是将input1和input2 做乘法运算，并输出为 output 

接下来, 传值的工作交给了 sess.run() , 需要传入的值放在了feed_dict={} 
并一一对应每一个 input. placeholder 与 feed_dict={} 是绑定在一起出现的。
with tf.Session() as sess:
    print(sess.run(output, feed_dict={input1: [7.], input2: [2.]}))
    # print(sess.run(output))其实就可以了因为有placeholder,每次都要传进去一个值，就是sess.run这个时候，
    #我以什么形式传进去呢？feed dictionary的形式。python中字典的形式
    #格式大括号，input1给它7.这个值。都是字典的样子
    #input1是你的第一个key, 它的冒号里面的值

# [ 14.]
"""""